#/bin/bash
##################################################################################
OUTPUT_DIR="$HOME_WINDOWS/Desktop/X"
cd $OUTPUT_DIR
echo ">> PWD = $(pwd)" 
##################################################################################

##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## CREATING SCRIPT USAGE FUNCTION AND CALLING IT VIA '--help'
usage()
{
cat <<EOM
USAGE: $(basename $0)
    ## THIS SCRIPT CREATES AND OUTPUT HTML FILE (in $OUTPUT_DIR) LISTING ALL THE BASH_SCRIPT NAMES IN $DIR_GITHUB
    ## AND ALSO WHETHER THEY HAVE THE USAGE HELP FUNCTION BLOCK IN THEM OR NOT.
    ##################################################################################
    ## USAGE_HOWTO ON CLI > bash $(basename $0)
    ##################################################################################
    ## If that usage function is not found, then you will have to manually create it.
    ## >> The idea here is that all bash scripts ending in *.sh extension should have 
    ## >> the usage help function in them, so that if that script is called as 
    ## >> bash SCRIPT_NAME --help , it should return the usage help.
    ##################################################################################
    ## CREATED ON: 2020-03-21 22:08
    ## CREATED BY: PALI
    ##################################################################################
EOM

exit 0 ## EXITING IF ONLY USAGE IS NEEDED
}
## Calling the usage function
if [ "$1" == "--help" ] ; then usage ; fi
##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##################################################################################
##################################################################################
outfile="$OUTPUT_DIR/_TMP_0000_create_html_index_with_usage_help.html" ;

echo "<!doctype html>
 <html lang='en'>
  <head>
   <!-- Required meta tags -->
    <meta charset='utf-8'>
     <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'>
      <!-- Bootstrap CSS -->
       <link rel='stylesheet' href='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css'>
        <title>Program output</title>
         </head>
          <body>
           <div class='container'><!-- BEGIN: main containter div -->" > $outfile



echo "<p>Autocreated on: $(date)" >> $outfile ;
echo "<br>This html file is autogenerated by this script: $(basename $0)</p>" >> $outfile ;

echo "<hr><h1>List of my Bash Scripts with help usage function defined.</h1>" >> $outfile 
echo "<h4>Blue color = Usage function found. // Red color = Usage function not found.</h4>" >> $outfile 

echo "<table class='table'>
  <thead>
    <tr>
      <th scope='col'>#</th>
      <th scope='col'>Script_Name</th>
      <th scope='col'>Usage_Function_Found or Not</th>
    </tr>
  </thead>
  <tbody>" >> $outfile ;

PATHDIR="$DIR_GITHUB/Bash-Scripts-To-Make-Life-Easier"
count=0;
for x in $(find $PATHDIR -type f -name '*.sh') ; do
    ((count++))
    script_name=$(echo $x | sed 's|/home/ubuntu/GitHub/Bash-Scripts-To-Make-Life-Easier/||g')
    echo; echo; 
    echo ">>>><<<< ========================================= $x ===========================================" ; 
    #bash $x --help ; 
    usage_found=$( cat $x | grep -i 'usage()' )
    ## IF usage function is found in bash script ...
    if [ "$usage_found" == "usage()" ] ; then
        echo "<tr class='table-primary'> <th scope='row'>$count</th> <td>$script_name</td> <td> </td> </tr>" >> $outfile ;
    else 
        echo "<tr class='table-danger'> <th scope='row'>$count</th> <td>$script_name</td> <td>USAGE FUNCTION NOT FOUND</td> </tr>" >> $outfile ;
    fi

done

echo "</tbody></table>" >> $outfile


echo "</div> <!-- END: main containter div -->
 <!-- Optional Bootstrap JavaScript -->
  <!-- jQuery first, then Popper.js, then Bootstrap JS -->
   <script src='https://code.jquery.com/jquery-3.3.1.slim.min.js'></script>
    <script src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js'></script>
     <script src='https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js'></script>
      </body>
       </html>" >> $outfile