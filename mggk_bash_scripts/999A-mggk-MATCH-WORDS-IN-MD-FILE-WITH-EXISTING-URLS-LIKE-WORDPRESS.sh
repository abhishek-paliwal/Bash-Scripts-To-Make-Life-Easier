#!/bin/bash
##################################################################################
THIS_SCRIPT_NAME="$(basename $0)" ;
THIS_SCRIPT_NAME_SANS_EXTENSION="$(echo $THIS_SCRIPT_NAME | sed 's/\.sh//g')" ;
##
WORKDIR="$DIR_Y" ;
cd $WORKDIR ; echo ">>>> Current working directory => $WORKDIR" ;
##################################################################################

##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
## CREATING SCRIPT USAGE FUNCION AND CALLING IT VIA '--help'
usage()
{
cat <<EOM
USAGE: $(basename $0)
    ################################################################################
    ## THIS SCRIPT TAKES THE FIRST TEXT FILE WITH RECIPE WRITE UP, WHICH IS PRESENT IN
    ## CURRENT WORKING DIRECTORY ( = $WORKDIR ) AND MATCHES ITS WORDS
    ## WITH THE EXISTING URLS PRESENT ON MGGK WEBSITE THE SAME WAY WORDPRESS SUGGESTS
    ## EXISTING URLS FOR MATCHED WORDS.
    ## FINALLY IT PRODUCES AN OUTPUT HTML FILE WITH MATCHED WORDS AND LINKS.
    ################################################################################
    ## CREATED BY: PALI
    ## CREATED ON: NOV 05, 2020
    ################################################################################
EOM

exit 0 ## EXITING IF ONLY USAGE IS NEEDED
}
## Calling the usage function
if [ "$1" == "--help" ] ; then usage ; fi
##++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

##################################################################################
HUGODIR="$REPO_MGGK/content" ; 
FILE_WITH_WORDS_TO_DISCARD="$REPO_SCRIPTS_MGGK/_REQUIREMENT_FILES_MGGK/999A-MGGK-WORDS-TO-DISCARD.txt" ;
FILE1=$(basename $(find $WORKDIR/ -type f -name "*.txt" | head -1)) ;
FILE2A="$WORKDIR/_tmp_urls0.txt" ;
FILE2="$WORKDIR/_tmp_urls1.txt" ;
FILE3="$WORKDIR/_tmp_ALL_URLS.txt" ;
##
FILE_FINAL="$WORKDIR/_tmp_OUTPUT-$THIS_SCRIPT_NAME_SANS_EXTENSION.html" ;
## writing first line

echo "<!doctype html>
<html lang='en'>
  <head>
    <!-- Required meta tags -->
    <meta charset='utf-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1, shrink-to-fit=no'>
    <!-- Bootstrap CSS -->
    <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css' integrity='sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2' crossorigin='anonymous'>
    <title>OUTPUT - THIS_SCRIPT_NAME_SANS_EXTENSION</title>
  </head>
  <body><div class='container'>" > $FILE_FINAL

echo "<h1>Finding maching urls with the words in the given text file</h1>" >> $FILE_FINAL
echo "File autogenerated at: $(date)" >> $FILE_FINAL
echo "File autogenerated by script: $THIS_SCRIPT_NAME" >> $FILE_FINAL
echo "<hr>" >> $FILE_FINAL

## Removing extra character and also converting to lowercase
#cat $FILE1 | awk '{print tolower($0)}' | tr ' ' '\n' | sed 's/"//g' | sed 's/\.//g' | sed 's/,//g' | sed "s+\'++g" | sed 's/-/ /g' | tr -d ' ' | sort | uniq > _tmp_$FILE1

##
grep -irh 'url: ' $HUGODIR/ | sed 's/url: //g' | sed 's+/++g' | sed 's/-/ /g' | tr ' ' '\n' | sed 's/"//g' |sort | uniq > $FILE2A ;

##
grep -irh 'url: ' $HUGODIR/ | sed 's+url: +https://www.mygingergarlickitchen.com+g'  > $FILE3 ;

##
comm -13 $FILE_WITH_WORDS_TO_DISCARD $FILE2A > $FILE2

####################################################
function FUNCTION_FIND_COMMON_WORDS_IN_URLS () {
    file_input=$1; 
    file_with_urls=$2 ;
    file_tmp0="$WORKDIR/_tmp0.txt"
    file_tmp1="$WORKDIR/_tmp1.txt"
    
    COUNT=0;
    while read WORD;
    do
    ####
        WORD=$(echo "$WORD"| cut -d" " -f 1);  ## Separating words by spaces      
        grep -i "$WORD" $file_with_urls > $file_tmp0 ;
        grep -i "$WORD" $FILE3 > $file_tmp1 ;
        lines_matched=$(cat $file_tmp0 | wc -l | tr -d ' ') ;
        ## Register matches if 1 <= matches <= 5, because too many ...
        ## matches mean general words are being matched.
        if [ $lines_matched -le 200 ] && [ $lines_matched -ge 1 ]  ; then
            ((COUNT++)) 
            echo >> $FILE_FINAL ;
            echo "<hr>" >> $FILE_FINAL ;
            echo "<h2>$COUNT // $WORD</h2>" >> $FILE_FINAL ;
            echo "<hr>" >> $FILE_FINAL ;
            cat $file_tmp1 | sed 's/^/<br>/g' | sed "s+$WORD+<span style='color:blue;'>$WORD</span>+g" >> $FILE_FINAL ;
            echo "<br><br>" >> $FILE_FINAL ;
            cat $file_tmp0 | sed 's/^/<br>/g' | sed "s+$WORD+<span style='color:red;'>$WORD</span>+g" >> $FILE_FINAL ;
        fi
    ####    
    done < $file_input
}
## RUN THIS FUNCTION
FUNCTION_FIND_COMMON_WORDS_IN_URLS $FILE2 $FILE1 

##################################################################################
echo "   <!-- Optional JavaScript; choose one of the two! -->
    <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
    <script src='https://code.jquery.com/jquery-3.5.1.slim.min.js' integrity='sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj' crossorigin='anonymous'></script>
    <script src='https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js' integrity='sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx' crossorigin='anonymous'></script>  
  </div></body>
</html>" >> $FILE_FINAL


################################################################################ 
## SUMMARY PRINTING
echo; 
echo "FILE1 = $FILE1" ;
echo "FILE2 = $FILE2" ;
echo "CRETED // OUTPUT HTML FILE => $FILE_FINAL" ;
## OPEN OUTPUT FILE IN BROWSER
open $FILE_FINAL ;
################################################################################
